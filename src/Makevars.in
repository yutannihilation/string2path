TARGET = @TARGET@

VENDORING = @VENDORING@
OFFLINE_OPTION = @OFFLINE_OPTION@

LIBDIR = ./rust/target/$(TARGET)/release
PKG_LIBS = -L$(LIBDIR) -lstring2path
STATLIB = $(LIBDIR)/libstring2path.a

all: C_clean

$(SHLIB): $(STATLIB)

$(STATLIB):
	# vendoring (Note: to avoid NOTE of "Found the following hidden files and
	# directories", .cargo needs to be created here)
	if [ "$(VENDORING)" = "yes" ]; then \
	  $(TAR) --extract --xz -f ./rust/vendor.tar.xz -C ./rust && \
	    mkdir -p ./rust/.cargo && \
	    cp ./cargo_vendor_config.toml ./rust/.cargo/config.toml; \
	fi

	if [ "$(TARGET)" != "wasm32-unknown-emscripten" ]; then \
	  @BEFORE_CARGO_BUILD@ cd ./rust && cargo build --jobs 1 --lib --release $(OFFLINE_OPTION); \
	else \
	  export CC="$(CC)" && \
	  export CFLAGS="$(CFLAGS)" && \
	  export CARGO_PROFILE_RELEASE_PANIC="abort" && \
	  @BEFORE_CARGO_BUILD@ cd ./rust && cargo +nightly build --lib --release --target $(TARGET) -Zbuild-std=panic_abort,std $(OFFLINE_OPTION); \
	fi
	@AFTER_CARGO_BUILD@

C_clean:
	rm -Rf $(SHLIB) $(OBJECTS) ./rust/.cargo $(STATLIB)

clean:
	rm -Rf $(SHLIB) $(OBJECTS) $(STATLIB) ./rust/.cargo ./rust/vendor ./rust/target

.PHONY: all C_clean clean
