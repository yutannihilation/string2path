TARGET = x86_64-pc-windows-gnu

# Rtools42 doesn't have the linker in the location that cargo expects, so we
# need to overwrite it via configuration.
CARGO_LINKER = x86_64-w64-mingw32.static.posix-gcc.exe

VENDORING = @VENDORING@
OFFLINE_OPTION = @OFFLINE_OPTION@

LIBDIR = ./rust/target/$(TARGET)/release
PKG_LIBS = -L$(LIBDIR) -lstring2path -lws2_32 -ladvapi32 -luserenv -lbcrypt -lntdll
STATLIB = $(LIBDIR)/libstring2path.a

all: $(SHLIB) clean_intermediate

$(SHLIB): $(STATLIB)

$(STATLIB):
	mkdir -p $(LIBDIR)/libgcc_mock && touch $(LIBDIR)/libgcc_mock/libgcc_eh.a

	# vendoring (Note: to avoid NOTE of "Found the following hidden files and
	# directories", .cargo needs to be created here)
	if [ "$(VENDORING)" = "yes" ]; then \
	  $(TAR) --extract --xz -f ./rust/vendor.tar.xz -C ./rust && \
	    mkdir -p ./rust/.cargo && \
	    cp ./cargo_vendor_config.toml ./rust/.cargo/config.toml; \
	fi

	@BEFORE_CARGO_BUILD@ cd ./rust && cargo build --jobs 1 --target $(TARGET) --lib --release $(OFFLINE_OPTION)
	@AFTER_CARGO_BUILD@

clean_intermediate:
	rm -Rf $(STATLIB) ./rust/.cargo

clean:
	rm -Rf $(SHLIB) $(OBJECTS) $(STATLIB) ./rust/.cargo ./rust/vendor ./rust/target

.PHONY: all clean_intermediate clean
