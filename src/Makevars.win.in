# If on the local development environment, do not override CARGO_HOME
NOT_CRAN_ENVVAR = "${NOT_CRAN}"

# WIN is used in the usual rwinlib Makevars, but it seems WIN envvar is not
# available when configure.win is used. So, R_ARCH is chosen here.
TARGET = $(subst /x64,x86_64,$(subst /i386,i686,$(R_ARCH)))-pc-windows-gnu

TOOLCHAIN = stable-msvc

LIBDIR = ./rust/target/$(TARGET)/release
PKG_LIBS = -L$(LIBDIR) -lstring2path -lws2_32 -ladvapi32 -luserenv
STATLIB = $(LIBDIR)/libstring2path.a

LOCAL_CARGO_HOME = $(PWD)/.cargo

all: C_clean

$(SHLIB): $(STATLIB)

$(STATLIB):
ifeq ($(NOT_CRAN_ENVVAR),"true")
	@echo "Detected NON_CRAN=true"
	cargo +$(TOOLCHAIN) build --target=$(TARGET) --lib --release --manifest-path=./rust/Cargo.toml
else
	@echo "Using local CARGO_HOME"
	CARGO_HOME="$(LOCAL_CARGO_HOME)" cargo +$(TOOLCHAIN) build --target=$(TARGET) --lib --release --manifest-path=./rust/Cargo.toml
	rm -Rf $(LOCAL_CARGO_HOME)
	rm -Rf $(LIBDIR)/build
endif

C_clean:
	rm -Rf $(SHLIB) $(OBJECTS) @CLEAN_EXTRA@

clean:
	rm -Rf $(SHLIB) $(OBJECTS) $(STATLIB) rust/target

.PHONY: all C_clean clean
