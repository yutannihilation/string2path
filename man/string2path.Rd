% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{string2path}
\alias{string2path}
\alias{string2stroke}
\alias{string2fill}
\title{Convert a string to paths.}
\usage{
string2path(text, font_file, tolerance = 0.01)

string2stroke(text, font_file, tolerance = 0.01, line_width = 10)

string2fill(text, font_file, tolerance = 0.01)
}
\arguments{
\item{text}{A text to convert to paths.}

\item{font_file}{A path to TTF or OTF file.}

\item{tolerance}{Maximum distance allowed between the curve and its
approximation. For more details, please refer to \href{https://docs.rs/lyon/0.17.5/lyon/#what-is-the-tolerance-variable-in-these-examples}{the documentation of the underlying Rust library}.}

\item{line_width}{Line width of strokes.}
}
\value{
A \code{tibble()} containing these columns: \itemize{ \item{x}{Unscaled
position of x.} \item{y}{Unscaled position of y.} \item{glyph_id}{IDs to
distinguish the glyphs.} \item{path_id}{IDs to distinguish the groups of
paths.} \item{triangle_id}{IDs to distinguish the triangles.
\code{string2path()} doesn't contain this column.} }
}
\description{
\code{string2path()} converts a text to the paths of the 'width-less' outlines of
each glyph. \code{string2stroke()} converts a text to the paths of the outlines,
with the specified line width, of each glyph. \code{string2fill()} converts a text
to the paths of the filled polygon of each glyph.
}
\examples{
if (requireNamespace("systemfonts", quietly = TRUE)) {
  available_fonts <- systemfonts::system_fonts()$path

  ttf_or_otf <- available_fonts[grepl("\\\\.(ttf|otf)$", available_fonts)]

  d_path <- string2path("TEXT", ttf_or_otf[1])
  plot(d_path$x, d_path$y)
  lines(d_path$x, d_path$y)
}

}
