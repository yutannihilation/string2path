on:
  push:
    branches:
      - main
    tags:
      - 'build*'
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: "${{ matrix.config.os }} (R: ${{ matrix.config.r }}, Rust: ${{ matrix.config.rust }})"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release',  rust: 'stable-msvc', rtools-version: '42'}
          - {os: windows-latest, r: 'devel',    rust: 'stable-msvc', rtools-version: '42'}
          - {os: macOS-latest,   r: 'release',  rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'release',  rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'devel',    rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'release',  rust: 'nightly'    }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # used in tools/configure_utils.sh
      ABORT_WHEN_NO_CARGO: "true"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.config.rust }}

      - name: Additional Rust set up for Windows
        if: runner.os == 'Windows' && matrix.config.r != 'oldrel'
        run: |
          rustup target add x86_64-pc-windows-gnu

      - uses: r-lib/actions/setup-r@v2
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          # TODO: Enable RSPM where possible
          use-public-rspm: false
          # use-public-rspm: ${{ matrix.config.r != 'devel' }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2

      - name: debug
        run: cat ./check/*.Rcheck/00install.out
