on:
  push:
    branches:
      - main
    tags:
      - 'windows*'
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: "${{ matrix.config.os }} (R: ${{ matrix.config.r }} ${{ matrix.config.c_runtime }}, Rust: ${{ matrix.config.rust }})"

    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: windows-latest, r: 'release', rust: 'stable'}
          - {os: windows-latest, r: 'devel',   rust: 'stable', c_runtime: 'ucrt'}
          # - {os: macOS-latest,   r: 'release', rust: 'stable'}
          # - {os: ubuntu-20.04,   r: 'release', rust: 'stable',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          # - {os: ubuntu-20.04,   r: 'devel',   rust: 'stable',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest", http-user-agent: "R/4.1.0 (ubuntu-20.04) R (4.1.0 x86_64-pc-linux-gnu x86_64 linux-gnu) on GitHub Actions" }
          # - {os: ubuntu-20.04,   r: 'release', rust: 'nightly', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: test1
        run: |
          Invoke-WebRequest -Uri "https://www.r-project.org/nosvn/winutf8/ucrt3/R-devel-win-80717-4617-4659.exe" -OutFile "R-devel-win.exe"

      - name: test2
        run: |
          "R-devel-win.exe" /SUPPRESSMSGBOXES /DIR='C:\R'
        shell: cmd

      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.rust }}
          default: true

      - name: Additional Rust set up for Windows
        if: runner.os == 'Windows'
        run: |
          rustup target add i686-pc-windows-gnu
          rustup target add x86_64-pc-windows-gnu

      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - name: Use UCRT
        if: runner.os == 'Windows' && matrix.config.c_runtime == 'ucrt'
        run: |
          echo "c:/rtools40/ucrt64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

          # Download UCRT version of R, and setup ~/.Renviron
          Rscript.exe .github/workflows/scripts/download_ucrt_R.R

          # Install (c.f. https://github.com/r-lib/actions/blob/630f4c9d8b813f45d0327a2fc20eb264fd518450/setup-r/src/installer.ts#L314-L318)
          # Start-Process -Wait "${env:TEMP}\\R-devel-win-ucrt.exe" @('/VERYSILENT', '/SUPPRESSMSGBOXES', '/DIR=C:\R')
        shell: pwsh

      - name: Use UCRT
        if: runner.os == 'Windows' && matrix.config.c_runtime == 'ucrt'
        run: |
          "%TEMP%\\R-devel-win-ucrt.exe" /VERYSILENT /SUPPRESSMSGBOXES /DIR='C:\R'
        shell: cmd

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}/*
            !${{ env.R_LIBS_USER }}/pak
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("rcmdcheck", execute = TRUE)
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          options(crayon.enabled = TRUE)
          args <- c("--no-manual", "--as-cran")
          # R-devel already drops 32bit Windows!
          if (identical("${{ matrix.config.r }}", "devel")) {
            args <- c(args, "--no-multiarch")
          }
          rcmdcheck::rcmdcheck(args = args, error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check

      # Upload prebuilt binaries for Windows
      - name: Tweak staticlib
        if: runner.os == 'Windows'
        run: |
          if ( "${{ matrix.config.c_runtime }}" -eq "ucrt" ) {
            mv ./check/string2path.Rcheck/00_pkg_src/string2path/src-x64/rust/target/x86_64-pc-windows-gnu/release/libstring2path.a ucrt-x86_64-pc-windows-gnu-libstring2path.a
          } else {
            mv ./check/string2path.Rcheck/00_pkg_src/string2path/src-x64/rust/target/x86_64-pc-windows-gnu/release/libstring2path.a x86_64-pc-windows-gnu-libstring2path.a
          }

          # R-devel already drops 32bit Windows!
          if ( "${{ matrix.config.r }}" -eq "devel" ) {
            mv ./check/string2path.Rcheck/00_pkg_src/string2path/src-i386/rust/target/i686-pc-windows-gnu/release/libstring2path.a i686-pc-windows-gnu-libstring2path.a
          }
        shell: pwsh

      - name: Release
        uses: softprops/action-gh-release@v1
        if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            x86_64-pc-windows-gnu-libstring2path.a
            ucrt-x86_64-pc-windows-gnu-libstring2path.a
            i686-pc-windows-gnu-libstring2path.a

      - name: Don't use tar from old Rtools to store the cache
        if: ${{ runner.os == 'Windows' && startsWith(steps.install-r.outputs.installed-r-version, '3.6' ) }}
        shell: bash
        run: echo "C:/Program Files/Git/usr/bin" >> $GITHUB_PATH
