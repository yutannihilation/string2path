#!/bin/sh

usage()
{
  cat - <<EOF
Options:
  --help   show help
  --build  specify target
EOF
  exit 0
}

tweak_for_aarm64_macos()
{
  while [ 0 -lt $# ]; do
    OPT="$1"
    shift 1
    case "${OPT}" in
      --help|-h)
        usage
        ;;
      --build=*)
        case $(echo "${OPT}" | cut -c 9-) in
          aarch64-apple-darwin*)
            TARGET="aarch64-apple-darwin"
            TARGET_ARG="--target ${TARGET}"
            # TODO: ugly hack to install aarch64-apple-darwin target on R-universe
            # c.f. https://github.com/r-universe-org/build-and-check/blob/261f7fc891adc7d4475501506821dc76275eaed9/macos-cross/action.yml#L26
            if [ -n "${ARROW_R_DEV}" ]; then
              echo "[DEBUG] Installing aarch64-apple-darwin target"
              BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD}"' rustup target add aarch64-apple-darwin \&\&'
            fi
            ;;
        esac
        ;;
      # ignore unknown options silently
    esac
  done
}

# The envvar used in libR-sys crate
LIBRSYS_R_VERSION=$("${R_HOME}/bin/Rscript" "./tools/print_r_version.R")

# Variables used for tweaking Makevars
BEFORE_CARGO_BUILD="export LIBRSYS_R_VERSION=\"${LIBRSYS_R_VERSION}\" \\&\\&"
AFTER_CARGO_BUILD=''

# Even when `cargo` is on `PATH`, `rustc` might not. We need to source
# ~/.cargo/env to ensure PATH is configured correctly in some cases
# (c.f. yutannihilation/string2path#4). However, this file is not always
# available (e.g. when Rust is installed via apt on Ubuntu), so it might be
# more straightforward to add `PATH` directly.
if [ -e "${HOME}/.cargo/env" ]; then
  . "${HOME}/.cargo/env"
  BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD} . \"${HOME}/.cargo/env\" \\&\\&"
fi

# Check the Rust installation, and abort if not available
"${R_HOME}/bin/Rscript" "./tools/configure.R"

ret=$?

if [ $ret -ne 0 ]; then
  exit $ret
fi

# If it's on CRAN, a package is not allowed to write in any other place than the
# temporary directory on installation. So, we need to tweak Makevars to make the
# compilation happen only within the package directory (i.e. `$(PWD)`).
if [ "${NOT_CRAN}" != "true" ]; then
  BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD}"' export CARGO_HOME="$(PWD)/.cargo" \&\&'
  AFTER_CARGO_BUILD="${AFTER_CARGO_BUILD}"'rm -Rf $(PWD)/.cargo $(LIBDIR)/build'
else
  echo "*** Detected NOT_CRAN=true, do not override CARGO_HOME"
fi

# define $TARGET and $TARGET_ARG if provided via --build arg
# c.f. https://www.gnu.org/prep/standards/html_node/Configuration.html
tweak_for_aarm64_macos $*

sed \
  -e "s|@BEFORE_CARGO_BUILD@|${BEFORE_CARGO_BUILD}|" \
  -e "s|@AFTER_CARGO_BUILD@|${AFTER_CARGO_BUILD}|" \
  -e "s|@TARGET@|${TARGET}|" \
  -e "s|@TARGET_ARG@|${TARGET_ARG}|" \
  src/Makevars.in > src/Makevars

# Uncomment this to debug
#
# cat src/Makevars
