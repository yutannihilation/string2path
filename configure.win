# Variables used for tweaking Makevars
BEFORE_CARGO_BUILD=''
AFTER_CARGO_BUILD=''
CLEAN_EXTRA=''

# Check the Rust installation, and, if not available, try downloading the
# precompiled binary.
"${R_HOME}/bin${R_ARCH_BIN}/Rscript.exe" "./tools/configure.R"

ret=$?

case $ret in
  # The case when Rust is available
  0)
    CLEAN_EXTRA='$(STATLIB)'
    ;;

  # The case when the precompiled binary is used
  100)
    ;;

  # The case when both Rust and the precompiled binary are unavailable (or the
  # R script failed some unexpected error)
  *)
    exit $ret
esac

# To address the change of the toolchain on R 4.2
BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD}"' export CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER="$(CARGO_LINKER)" \&\&'
BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD}"' export LIBRARY_PATH="$${LIBRARY_PATH};$(CURDIR)/$(LIBDIR)/libgcc_mock" \&\&'

# If it's on CRAN, a package is not allowed to write in any other place than the
# temporary directory on installation. So, we need to tweak Makevars to make the
# compilation happen only within the package directory (i.e. `$(PWD)`).
if [ "${NOT_CRAN}" != "true" ]; then
  BEFORE_CARGO_BUILD="${BEFORE_CARGO_BUILD}"' export CARGO_HOME="$(PWD)/.cargo" \&\&'
  AFTER_CARGO_BUILD="${AFTER_CARGO_BUILD}"'rm -Rf $(PWD)/.cargo $(LIBDIR)/build'
else
  echo "*** Detected NOT_CRAN=true, do not override CARGO_HOME"
fi

sed \
  -e "s|@CLEAN_EXTRA@|${CLEAN_EXTRA}|" \
  -e "s|@BEFORE_CARGO_BUILD@|${BEFORE_CARGO_BUILD}|" \
  -e "s|@AFTER_CARGO_BUILD@|${AFTER_CARGO_BUILD}|" \
  src/Makevars.win.in > src/Makevars.win

# Uncomment this to debug
#
# cat src/Makevars.win
